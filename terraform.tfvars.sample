location = "region_name" # for e.g. australiaeast
app_title = "librechat"
openai_key = ""
chatgpt_token = "user_provided"
anthropic_api_key = "user_provided"
bingai_token = "user_provided"
palm_key = "user_provided"
app_service_sku_name = "B1"
mongo_uri = ""
use_cosmosdb_free_tier = true

deployments = {
  "gpt-35-turbo" = {
    name = "gpt-35-turbo"
    rai_policy_name = "Microsoft.Default"
    model_name = "gpt-35-turbo"
    model_format = "OpenAI"
    model_version = "0613"
    scale_type = "Standard"
  }
  "gpt-35-turbo-16k" = {
    name = "gpt-35-turbo-16k"
    rai_policy_name = "Microsoft.Default"
    model_name = "gpt-35-turbo-16k"
    model_format = "OpenAI"
    model_version = "0613"
    scale_type = "Standard"
  }
  "gpt-4" = {
    name = "gpt-4"
    rai_policy_name = "Microsoft.Default"
    model_name = "gpt-4"
    model_format = "OpenAI"
    model_version = "0613"
    scale_type = "Standard"
  }
  "gpt-4-32k" = {
    name = "gpt-4-32k"
    rai_policy_name = "Microsoft.Default"
    model_name = "gpt-4-32k"
    model_format = "OpenAI"
    model_version = "0613"
    scale_type = "Standard"
  }
  "text-embedding-ada-002" = {
    name = "text-embedding-ada-002"
    rai_policy_name = "Microsoft.Default"
    model_name = "text-embedding-ada-002"
    model_format = "OpenAI"
    model_version = "2"
    scale_type = "Standard"
  }
}

azure_openai_api_deployment_name = ""
azure_openai_api_completions_deployment_name = ""
azure_openai_api_version = "2024-02-01"
azure_openai_api_embeddings_deployment_name = ""
public_network_access_enabled = false

#========================================#
# MCP (Model Context Protocol) Config    #
#========================================#
#
# Enable MCP to extend LibreChat with AI tools and agents.
# When enabled, automatically provisions a librechat.yaml config
# to Azure Blob Storage with MCP servers and agents configured.
# See docs: https://www.librechat.ai/docs/features/mcp
#
# Enable MCP support (creates config automatically in Azure Blob Storage)
# enable_mcp = true
#
# Select which MCP servers to enable
# Options: filesystem, fetch, puppeteer, github, sqlite, memory
# mcp_servers = ["filesystem", "fetch", "puppeteer"]
#
# Alternative: Use a custom librechat.yaml from URL or path
# (Only needed if not using enable_mcp auto-generation)
# config_path = "https://example.com/configs/librechat.yaml"
#
# Optional MCP behavior tuning:
# mcp_oauth_on_auth_error      = "true"   # Treat 401/403 as OAuth requirement when metadata absent
# mcp_oauth_detection_timeout  = "5000"   # OAuth detection timeout (ms)
# mcp_connection_check_ttl     = "60000"  # Cache connection status checks (ms)

# IMPORTANT: Set to true to enable MCP features in LibreChat
enable_mcp = true
mcp_servers = ["filesystem", "fetch", "puppeteer"]
# config_path = ""
# mcp_oauth_on_auth_error = ""
# mcp_oauth_detection_timeout = ""
# mcp_connection_check_ttl = ""
